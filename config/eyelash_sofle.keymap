#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC         &kp N1        &kp N2        &kp N3    &kp N4  &kp N5       &mo 2     &kp N6     &kp N7     &kp N8     &kp N9      &kp N0         &kp BACKSPACE
&kp TAB         &kp Q         &kp W         &kp E     &kp R   &kp T        &mkp MB1  &kp Y      &kp U      &kp I      &kp O       &kp P          &kp ENTER
&kp LEFT_SHIFT  &kp A         &kp S         &kp D     &kp F   &kp G        &mo 3     &kp H      &kp J      &kp K      &kp L       &kp SEMICOLON  &kp RIGHT_SHIFT
&kp LCTRL       &kp Z         &kp X         &kp C     &kp V   &kp B        &mkp MB2  &kp N      &kp M      &kp COMMA  &kp PERIOD  &kp SLASH      &kp RIGHT_CONTROL
&caps_word      &kp LEFT_ALT  &kp LEFT_WIN  &kp INT4  &mo 1   &kp SPACE    &mkp MB3  &kp SPACE  &kp MINUS  &kp EQUAL  &kp EQUAL   &kp INT4
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp GRAVE                        &kp F1                            &kp F2                             &kp F3                             &kp F4                             &kp F5                               &mmv MOVE_UP     &kp F6           &kp F7           &kp F8      &kp F9     &kp F10           &trans
&kp GRAVE                        &kp GRAVE                         &mkp LCLK                          &mkp MCLK                          &mkp RCLK                          &mkp MB4                             &mmv MOVE_DOWN   &kp PG_UP        &kp END          &kp UP      &kp HOME   &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&rgb_ug RGB_COLOR_HSB(0,100,50)  &rgb_ug RGB_COLOR_HSB(61,100,54)  &rgb_ug RGB_COLOR_HSB(119,100,50)  &rgb_ug RGB_COLOR_HSB(183,100,50)  &rgb_ug RGB_COLOR_HSB(245,100,50)  &rgb_ug RGB_COLOR_HSB(304,100,50)    &mmv MOVE_LEFT   &kp PG_DN        &kp LEFT         &kp DOWN    &kp RIGHT  &kp SQT           &kp NON_US_BACKSLASH
&trans                           &rgb_ug RGB_OFF                   &rgb_ug RGB_ON                     &rgb_ug RGB_EFF                    &rgb_ug RGB_EFR                    &rgb_ug RGB_SPI                      &mmv MOVE_RIGHT  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp INSERT  &kp F11    &kp F12           &trans
&kp C_MUTE                       &trans                            &trans                             &trans                             &trans                             &trans                               &mkp LCLK        &trans           &trans           &trans      &trans     &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans           &kp F16  &kp F1   &kp F2   &kp F3   &kp F20     &kp F21
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &trans           &kp F17  &kp F4   &kp F5   &kp F6   &kp UNDER   &kp PLUS
&trans     &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &mmv MOVE_LEFT   &kp F18  &kp F7   &kp F8   &kp F9   &kp LBRC    &kp RBRC
&trans     &sys_reset    &trans          &bootloader   &trans        &trans          &mmv MOVE_RIGHT  &kp F19  &kp F10  &kp F11  &kp F12  &kp RSHIFT  &kp RCTRL
&trans     &trans        &trans          &trans        &trans        &trans          &mkp LCLK        &trans   &trans   &kp F13  &kp F14  &kp F15
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp LC(X)  &kp LC(C)  &kp LC(V)  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp Q      &kp W      &kp E      &kp R   &kp T   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp A      &kp S      &kp D      &kp F   &kp G   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp Z      &kp X      &kp C      &kp V   &kp B   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans     &trans     &trans     &trans  &trans
            >;
        };
    };
};
